<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AppInsights.WindowsDesktop</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords">
            <summary>
            Keywords for the PlatformEventSource.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords.UserActionable">
            <summary>
            Key word for user actionable events.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords.Diagnostics">
            <summary>
            Keyword for errors that trace at Verbose level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords.VerboseFailure">
            <summary>
            Keyword for errors that trace at Verbose level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords.ErrorFailure">
            <summary>
            Keyword for errors that trace at Error level.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.FixedSizeQueue`1">
            <summary>
            A light fixed size queue. If Enqueue is called and queue's limit has reached the last item will be removed.
            This data structure is thread safe.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.FlushManager">
            <summary>
            This class handles all the logic for flushing the In Memory buffer to the persistent storage. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.FlushManager.telemetryBuffer">
            <summary>
            The memory buffer. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.FlushManager.flushWaitHandle">
            <summary>
            A wait handle that signals when a flush is required. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.FlushManager.storage">
            <summary>
            The storage that is used to persist all the transmissions. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.FlushManager.disposeCount">
            <summary>
            The number of times this object was disposed.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.FlushManager.flushLoopEnabled">
            <summary>
            A boolean value that determines if the long running thread that runs flush in a loop will stay alive. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.FlushManager.#ctor(Microsoft.ApplicationInsights.Channel.StorageBase,Microsoft.ApplicationInsights.Channel.TelemetryBuffer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.FlushManager"/> class.
            </summary>        
            <param name="storage">The storage that persists the telemetries.</param>
            <param name="telemetryBuffer">In memory buffer that holds telemetries.</param>
            <param name="supportAutoFlush">A boolean value that determines if flush will happen automatically. Used by unit tests.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.FlushManager.FlushDelay">
            <summary>
            Gets or sets the maximum telemetry batching interval. Once the interval expires, <see cref="T:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter"/> 
            persists the accumulated telemetry items.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.FlushManager.EndpointAddress">
            <summary>
            Gets or sets the service endpoint. 
            </summary>
            <remarks>
            Q: Why flushManager knows about the endpoint? 
            A: Storage stores <see cref="T:Microsoft.ApplicationInsights.Channel.Transmission"/> objects and Transmission objects contain the endpoint address.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.FlushManager.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.FlushManager.Flush">
            <summary>
            Persist the in-memory telemetry items.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.FlushManager.FlushLoop">
            <summary>
            Flushes in intervals set by <see cref="P:Microsoft.ApplicationInsights.Channel.FlushManager.FlushDelay"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.FlushManager.OnTelemetryBufferFull">
            <summary>
            Handles the full event coming from the TelemetryBuffer.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.PersistenceChannel">
            <summary>
            Represents a communication channel for sending telemetry to Application Insights via HTTPS.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.PersistenceChannel"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceChannel.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.PersistenceChannel"/> class.
            </summary>
            <param name="storageFolderName">
            A folder name. Under this folder all the transmissions will be saved. 
            Setting this value groups channels, even from different processes. 
            If 2 (or more) channels has the same <c>storageFolderName</c> only one channel will perform the sending even if the channel is in a different process/AppDomain/Thread.  
            </param>
            <param name="sendersCount">
            Defines the number of senders. A sender is a long-running thread that sends telemetry batches in intervals defined by <see cref="P:Microsoft.ApplicationInsights.Channel.PersistenceChannel.SendingInterval"/>. 
            So the amount of senders also defined the maximum amount of http channels opened at the same time.
            </param>        
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceChannel.StorageUniqueFolder">
            <summary>
            Gets the storage unique folder.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceChannel.DeveloperMode">
            <summary>
            Gets or sets a value indicating whether developer mode of telemetry transmission is enabled.
            When developer mode is True, <see cref="T:Microsoft.ApplicationInsights.Channel.PersistenceChannel"/> sends telemetry to Application Insights immediately 
            during the entire lifetime of the application. When developer mode is False, <see cref="T:Microsoft.ApplicationInsights.Channel.PersistenceChannel"/>
            respects production sending policies defined by other properties.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceChannel.SendingInterval">
            <summary>
            Gets or sets an interval between each successful sending.
            </summary>
            <remarks>On error scenario this value is ignored and the interval will be defined using an exponential back-off algorithm.</remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceChannel.FlushInterval">
            <summary>
            Gets or sets the interval between each flush to disk. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceChannel.EndpointAddress">
            <summary>
            Gets or sets the HTTP address where the telemetry is sent.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceChannel.MaxTelemetryBufferCapacity">
            <summary>
            Gets or sets the maximum number of telemetry items that will accumulate in a memory before 
            <see cref="T:Microsoft.ApplicationInsights.Channel.PersistenceChannel"/> persists them to disk.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceChannel.MaxTransmissionStorageCapacity">
            <summary>
            Gets or sets the maximum amount of disk space, in bytes, that <see cref="T:Microsoft.ApplicationInsights.Channel.PersistenceChannel"/> will 
            use for storage.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceChannel.MaxTransmissionStorageFilesCapacity">
            <summary>
            Gets or sets the maximum amount of files allowed in storage. When the limit is reached telemetries will be dropped.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceChannel.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Sends an instance of ITelemetry through the channel.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceChannel.Flush">
            <summary>
            Flushes the in-memory buffer to disk. And attempt to send
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter">
            <summary>
            Implements throttled and persisted transmission of telemetry to Application Insights. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.senders">
            <summary>
            A list of senders that sends transmissions. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.storage">
            <summary>
            The storage that is used to persist all the transmissions. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.sendingCancellationTokenSource">
            <summary>
            Cancels the sending. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.mutex">
            <summary>
            A mutex that will be used as a name mutex to synchronize transmitters from different channels and different processes.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.disposeCount">
            <summary>
            The number of times this object was disposed.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.eventToKeepMutexThreadAlive">
            <summary>
            Mutex is released once the thread that acquired it is ended. This event keeps the long running thread that acquire the mutex alive until dispose is called.    
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.#ctor(Microsoft.ApplicationInsights.Channel.StorageBase,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter"/> class.
            </summary>
            <param name="storage">The transmissions storage.</param>
            <param name="sendersCount">The number of senders to create.</param>
            <param name="createSenders">A boolean value that indicates if this class should try and create senders. This is a workaround for unit tests purposes only.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.StorageUniqueFolder">
            <summary>
            Gets a unique folder name. This folder will be used to store the transmission files.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.SendingInterval">
            <summary>
            Gets or sets the interval between each successful sending. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.SendForDeveloperModeAsync(Microsoft.ApplicationInsights.Channel.ITelemetry,System.String)">
            <summary>
            Sending the item to the endpoint immediately without persistence.
            </summary>
            <param name="item">Telemetry item.</param>
            <param name="endpointAddress">Server endpoint address.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.AcquireMutex(System.Action)">
            <summary>
            Make sure that <paramref name="action"/> happens only once even if it is executed on different processes. 
            On every given time only one channel will acquire the mutex, even if the channel is on a different process.        
            This method is using a named mutex to achieve that. Once the mutex is acquired <paramref name="action"/> will be executed.
            </summary>
            <param name="action">The action to perform once the mutex is acquired.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.CreateSenders(System.Int32)">
            <summary>
            Create senders to send telemetries. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.PersistenceTransmitter.StopSenders">
            <summary>
            Stops the senders.  
            </summary>
            <remarks>As long as there is no Start implementation, this method should only be called from Dispose.</remarks>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.Sender">
            <summary>
            Fetch transmissions from the storage and sends it. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.DelayHandler">
            <summary>
            A wait handle that flags the sender when to start sending again. The type is protected for unit test.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.sendingIntervalOnNoData">
            <summary>
            When storage is empty it will be queried again after this interval. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.maxIntervalBetweenRetries">
            <summary>
            Holds the maximum time for the exponential back-off algorithm. The sending interval will grow on every HTTP Exception until this max value.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.stoppedHandler">
            <summary>
            A wait handle that is being set when Sender is no longer sending.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.defaultSendingInterval">
            <summary>
            The default sending interval.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.stopped">
            <summary>
            A boolean value that indicates if the sender should be stopped. The sender's while loop is checking this boolean value.  
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.drainingTimeout">
            <summary>
            The amount of time to wait, in the stop method, until the last transmission is sent. 
            If time expires, the stop method will return even if the transmission hasn't been sent. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.storage">
            <summary>
            The transmissions storage.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.disposeCount">
            <summary>
            The number of times this object was disposed.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.Sender.transmitter">
            <summary>
            Holds the transmitter.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Sender.#ctor(Microsoft.ApplicationInsights.Channel.StorageBase,Microsoft.ApplicationInsights.Channel.PersistenceTransmitter,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.Sender"/> class.
            </summary>
            <param name="storage">The storage that holds the transmissions to send.</param>
            <param name="transmitter">
            The persistence transmitter that manages this Sender. 
            The transmitter will be used as a configuration class, it exposes properties like SendingInterval that will be read by Sender.
            </param>
            <param name="startSending">A boolean value that determines if Sender should start sending immediately. This is only used for unit tests.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Sender.SendingInterval">
            <summary>
            Gets the interval between each successful sending.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Sender.Dispose">
            <summary>
            Disposes the managed objects.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Sender.StopAsync">
            <summary>
            Stops the sender. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Sender.SendLoop">
            <summary>
            Send transmissions in a loop. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Sender.Send(Microsoft.ApplicationInsights.Channel.StorageTransmission,System.TimeSpan@)">
            <summary>
            Sends a transmission and handle errors.
            </summary>
            <param name="transmission">The transmission to send.</param>
            <param name="nextSendInterval">When this value returns it will hold a recommendation for when to start the next sending iteration.</param>
            <returns>A boolean value that indicates if there was a retriable error.</returns>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Sender.LogInterval(System.TimeSpan,System.TimeSpan)">
            <summary>
            Log next interval. Only log the interval when it changes by more then a minute. So if interval grow by 1 minute or decreased by 1 minute it will be logged. 
            Logging every interval will just make the log noisy. 
            </summary>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Sender.GetStatusCode(System.Net.WebException)">
            <summary>
            Return the status code from the web exception or null if no such code exists. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Sender.IsRetryable(System.Nullable{System.Int32},System.Net.WebExceptionStatus)">
            <summary>
            Returns true if <paramref name="httpStatusCode" /> or <paramref name="webExceptionStatus" /> are retriable.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Sender.CalculateNextInterval(System.Nullable{System.Int32},System.TimeSpan,System.TimeSpan)">
            <summary>
            Calculates the next interval using exponential back-off algorithm (with the exceptions of few error codes that reset the interval to <see cref="P:Microsoft.ApplicationInsights.Channel.Sender.SendingInterval"/>.
            </summary>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Storage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.Storage"/> class.
            </summary>
            <param name="uniqueFolderName">A folder name. Under this folder all the transmissions will be saved.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Storage.FolderName">
            <summary>
            Gets the storage's folder name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Storage.StorageFolderInitialized">
            <summary>
            Gets or sets a value indicating whether storage folder was already tried to be created. Only used for UTs. 
            Once this value is true, StorageFolder will always return null, which mocks scenario that storage's folder 
            couldn't be created.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Storage.StorageFolder">
            <summary>
            Gets the storage folder. If storage folder couldn't be created, null will be returned.
            </summary>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Storage.Peek">
            <summary>
            Reads an item from the storage. Order is Last-In-First-Out. 
            When the Transmission is no longer needed (it was either sent or failed with a non-retriable error) it should be disposed. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Storage.GetFiles(System.String)">
            <summary>
            Get files from <see cref="F:Microsoft.ApplicationInsights.Channel.Storage.storageFolder"/>.
            </summary>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Storage.DeleteObsoleteFiles">
            <summary>
            Enqueue is saving a transmission to a <c>tmp</c> file and after a successful write operation it renames it to a <c>trn</c> file. 
            A file without a <c>trn</c> extension is ignored by Storage.Peek(), so if a process is taken down before rename happens 
            it will stay on the disk forever. 
            This method deletes files with the <c>tmp</c> extension that exists on disk for more than 5 minutes.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.StorageBase.peekedTransmissions">
            <summary>
            Peeked transmissions dictionary (maps file name to its full path). Holds all the transmissions that were peeked.
            </summary>
            <remarks>
            Note: The value (=file's full path) is not required in the Storage implementation. 
            If there was a concurrent Abstract Data Type Set it would have been used instead. 
            However, since there is no concurrent Set, dictionary is used and the second value is ignored.    
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.StorageBase.CapacityInBytes">
            <summary>
            Gets or sets the maximum size of the storage in bytes. When limit is reached, the Enqueue method will drop new transmissions. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.StorageBase.MaxFiles">
            <summary>
            Gets or sets the maximum number of files. When limit is reached, the Enqueue method will drop new transmissions. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.StorageTransmission.Dispose">
            <summary>
            Disposing the storage transmission.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.StorageTransmission.CreateFromStreamAsync(System.IO.Stream,System.String)">
            <summary>
            Creates a new transmission from the specified <paramref name="stream"/>.
            </summary>
            <returns>Return transmission loaded from file; return null if the file is corrupted.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.StorageTransmission.SaveAsync(Microsoft.ApplicationInsights.Channel.Transmission,System.IO.Stream)">
            <summary>
            Saves the transmission to the specified <paramref name="stream"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.TelemetryBuffer">
            <summary>
            Accumulates <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> items for efficient transmission.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.TelemetryBuffer.OnFull">
            <summary>
            Delegate that is raised when the buffer is full.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.TelemetryBuffer.Capacity">
            <summary>
            Gets or sets the maximum number of telemetry items that can be buffered before transmission.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is zero or less.</exception>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.DeveloperModeWithDebuggerAttachedTelemetryModule">
            <summary>
            Telemetry module that sets developer mode to true when is not already set AND managed debugger is attached.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.DeveloperModeWithDebuggerAttachedTelemetryModule.IsDebuggerAttached">
            <summary>
            Function that checks whether debugger is attached with implementation that can be replaced by unit test code.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.DeveloperModeWithDebuggerAttachedTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Gives the opportunity for this telemetry module to initialize configuration object that is passed to it.
            </summary>
            <param name="configuration">Configuration object.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.DeviceTelemetryInitializer">
            <summary>
            A telemetry context initializer that will gather device context information.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.DeviceTelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Populates device properties on a telemetry item.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.FirstChanceExceptionStatisticsTelemetryModule">
            <summary>
            The module subscribed to AppDomain.CurrentDomain.FirstChanceException to send exceptions statistics to ApplicationInsights.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.FirstChanceExceptionStatisticsTelemetryModule.executionSyncObject">
            <summary>
            This object prevents double entry into the exception callback.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.FirstChanceExceptionStatisticsTelemetryModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.FirstChanceExceptionStatisticsTelemetryModule" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.FirstChanceExceptionStatisticsTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initializes the telemetry module.
            </summary>
            <param name="configuration">Telemetry Configuration used for creating TelemetryClient for sending exception statistics to Application Insights.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.FirstChanceExceptionStatisticsTelemetryModule.Dispose">
            <summary>
            Disposing TaskSchedulerOnUnobservedTaskException instance. This class doesn't have the finalize method as we expect it 
            live for a duration of the process and be disposed by AI infrastructure.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.FirstChanceExceptionStatisticsTelemetryModule.Dispose(System.Boolean)">
            <summary>
            IDisposable implementation.
            </summary>
            <param name="disposing">The method has been called directly or indirectly by a user's code.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.GraphicsTelemetryInitializer">
            <summary>
            A telemetry context initializer that will gather graphics capabilities information.
            </summary> 
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.GraphicsTelemetryInitializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.GraphicsTelemetryInitializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.GraphicsTelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Populates graphics properties on a telemetry item.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.DeviceContextReader">
            <summary>
            The reader is platform specific and applies to .NET applications only.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.DeviceContextReader.Instance">
            <summary>
            Gets or sets the singleton instance for our application context reader.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.DeviceContextReader.GetHostSystemLocale">
            <summary>
            Gets the host system locale.
            </summary>
            <returns>The discovered locale.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.DeviceContextReader.GetDisplayLanguage">
            <summary>
            Gets the display language.
            </summary>
            <returns>The discovered locale.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.DeviceContextReader.GetDeviceType">
            <summary>
            Gets the type of the device.
            </summary>
            <returns>The type for this device as a hard-coded string.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.DeviceContextReader.GetNetworkType">
            <summary>
            Gets the network type.
            </summary>
            <returns>The discovered network type.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.DeviceContextReader.GetDeviceUniqueId">
            <summary>
            Gets the device unique ID, or uses the fallback if none is available due to application configuration.
            </summary>
            <returns>
            The discovered device identifier.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.WindowsServerEventSource">
            <summary>
            ETW EventSource tracing class.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.WindowsServerEventSource.Log">
            <summary>
            Instance of the WindowsServerEventSource class.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.WindowsServerEventSource.Keywords">
            <summary>
            Keywords for the PlatformEventSource. Those keywords should match keywords in Core.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.Implementation.WindowsServerEventSource.Keywords.UserActionable">
            <summary>
            Key word for user actionable events.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.IMetricProcessor">
            <summary>
            Provides functionality to process metric values prior to aggregation.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.IMetricProcessor.Track(Microsoft.ApplicationInsights.WindowsDesktop.Metric,System.Double)">
            <summary>
            Process metric value.
            </summary>
            <param name="metric">Metric definition.</param>
            <param name="value">Metric value.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager">
            <summary>
            Metric factory and controller. Sends metrics to Application Insights service. Pre-aggregates metrics to reduce bandwidth.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#send-metrics">Learn more</a>
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.sdkVersionPropertyValue">
            <summary>
            Value of the property indicating 'app insights version' allowing to tell metric was built using metric manager.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.aggregationPeriod">
            <summary>
            Reporting frequency.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.telemetryClient">
            <summary>
            Telemetry client used to track resulting aggregated metrics.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.telemetryConfig">
            <summary>
            Telemetry config for this telemetry client.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.snapshotTimer">
            <summary>
            Metric aggregation snapshot task.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.lastSnapshotStartDateTime">
            <summary>
            Last time snapshot was initiated.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.metricDictionary">
            <summary>
            A dictionary of all metrics instantiated via this manager.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.#ctor(Microsoft.ApplicationInsights.TelemetryClient,Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager"/> class.
            </summary>
            <param name="client">Telemetry client to use to output aggregated metric data.</param>
            <param name="config">Telemetry configuration for the telemetry client.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.MetricProcessors">
            <summary>
            Gets a list of metric processors associated
            with this instance of <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.CreateMetric(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates metric.
            </summary>
            <param name="name">Name of the metric.</param>
            <param name="dimensions">Optional dimensions.</param>
            <returns>Metric instance.</returns>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#send-metrics">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.Flush">
            <summary>
            Flushes the in-memory aggregation buffers. Not normally required - occurs automatically at intervals and on Dispose.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.GetWaitTime">
            <summary>
            Calculates wait time until next snapshot of the aggregators.
            </summary>
            <returns>Wait time.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.CreateAggregatedMetricTelemetry(Microsoft.ApplicationInsights.WindowsDesktop.Metric,Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator)">
            <summary>
            Generates telemetry object based on the metric aggregator.
            </summary>
            <param name="metric">Metric definition.</param>
            <param name="statistics">Metric aggregator statistics calculated for a period of time.</param>
            <returns>Metric telemetry object resulting from aggregation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.SnapshotAndReschedule">
            <summary>
            Takes a snapshot of aggregators collected by this instance of the manager
            and schedules the next snapshot.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.MetricManager.Snapshot">
            <summary>
            Takes snapshot of all active metric aggregators and turns results into metric telemetry.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator">
            <summary>
            Represents mechanism to calculate basic statistical parameters of a series of numeric values.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.trackLock">
            <summary>
            Lock to make Track() method thread-safe.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.Count">
            <summary>
            Gets sample count.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.Sum">
            <summary>
            Gets sum of the samples.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.SumOfSquares">
            <summary>
            Gets sum of squares of the samples.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.Min">
            <summary>
            Gets minimum sample value.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.Max">
            <summary>
            Gets maximum sample value.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.Average">
            <summary>
            Gets arithmetic average value in the population.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.Variance">
            <summary>
            Gets variance of the values in the population.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.StandardDeviation">
            <summary>
            Gets standard deviation of the values in the population.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.SimpleMetricStatisticsAggregator.Track(System.Double)">
            <summary>
            Adds a value to the time series.
            </summary>
            <param name="value">Metric value.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.Metric">
            <summary>
            Represents aggregator for a single time series of a given metric.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.Metric.manager">
            <summary>
            Aggregator manager for the aggregator.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.Metric.aggregatorId">
            <summary>
            Metric aggregator id to look for in the aggregator dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.Metric.hashCode">
            <summary>
            Aggregator hash code.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Metric.#ctor(Microsoft.ApplicationInsights.WindowsDesktop.MetricManager,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.Metric"/> class.
            </summary>
            <param name="manager">Aggregator manager handling this instance.</param>
            <param name="name">Metric name.</param>
            <param name="dimensions">Metric dimensions.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.Metric.Name">
            <summary>
            Gets metric name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.Metric.Dimensions">
            <summary>
            Gets a set of metric dimensions and their values.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Metric.Track(System.Double)">
            <summary>
            Adds a value to the time series.
            </summary>
            <param name="value">Metric value.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Metric.GetHashCode">
            <summary>
            Returns the hash code for this object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Metric.Equals(Microsoft.ApplicationInsights.WindowsDesktop.Metric)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object. </param>
            <returns>True if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Metric.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>True if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Metric.GetAggregatorId(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Generates id of the aggregator serving time series specified in the parameters.
            </summary>
            <param name="name">Metric name.</param>
            <param name="dimensions">Optional metric dimensions.</param>
            <returns>Aggregator id that can be used to get aggregator.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.Metric.ForwardToProcessors(System.Double)">
            <summary>
            Forwards value to metric processors.
            </summary>
            <param name="value">Value tracked on time series.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.TaskTimerInternal">
            <summary>
            Runs a task after a certain delay and log any error.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.TaskTimerInternal.InfiniteTimeSpan">
            <summary>
            Represents an infinite time span.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.TaskTimerInternal.Delay">
            <summary>
            Gets or sets the delay before the task starts. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.WindowsDesktop.TaskTimerInternal.IsStarted">
            <summary>
            Gets a value indicating whether value that indicates if a task has already started.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.TaskTimerInternal.Start(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Start the task.
            </summary>
            <param name="elapsed">The task to run.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.TaskTimerInternal.Cancel">
            <summary>
            Cancels the current task.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.TaskTimerInternal.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.TaskTimerInternal.LogException(System.Exception)">
            <summary>
            Log exception thrown by outer code.
            </summary>
            <param name="exception">Exception to log.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.WindowsServerCoreEventSource.OperationIsNullWarning(System.String)">
            <summary>
            Logs the information when there operation to track is null.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.WindowsServerCoreEventSource.InvalidOperationToStopError(System.String)">
            <summary>
            Logs the information when there operation to stop does not match the current operation.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.WindowsServerCoreEventSource.Keywords">
            <summary>
            Keywords for the PlatformEventSource.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.WindowsServerCoreEventSource.Keywords.UserActionable">
            <summary>
            Key word for user actionable events.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.WindowsServerCoreEventSource.Keywords.Diagnostics">
            <summary>
            Keyword for errors that trace at Verbose level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.WindowsServerCoreEventSource.Keywords.VerboseFailure">
            <summary>
            Keyword for errors that trace at Verbose level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.WindowsDesktop.WindowsServerCoreEventSource.Keywords.ErrorFailure">
            <summary>
            Keyword for errors that trace at Error level.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.SessionTelemetryInitializer">
            <summary>
            A telemetry context initializer that will gather session context information (Session and User Id).
            </summary> 
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.SessionTelemetryInitializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.SessionTelemetryInitializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.SessionTelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Populates session id/user id properties on a telemetry item.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.UnhandledExceptionTelemetryModule">
            <summary>
            The module subscribed to AppDomain.CurrentDomain.UnhandledException to send exceptions to ApplicationInsights.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.UnhandledExceptionTelemetryModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.UnhandledExceptionTelemetryModule"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.UnhandledExceptionTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initializes the telemetry module.
            </summary>
            <param name="configuration">Telemetry Configuration used for creating TelemetryClient for sending exceptions to ApplicationInsights.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.UnhandledExceptionTelemetryModule.Dispose">
            <summary>
            Disposing UnhandledExceptionTelemetryModule instance.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.UnobservedExceptionTelemetryModule">
            <summary>
            The module subscribed to TaskScheduler.UnobservedTaskException to send exceptions to ApplicationInsights.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.UnobservedExceptionTelemetryModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.UnobservedExceptionTelemetryModule" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.UnobservedExceptionTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initializes the telemetry module.
            </summary>
            <param name="configuration">Telemetry Configuration used for creating TelemetryClient for sending exceptions to ApplicationInsights.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.UnobservedExceptionTelemetryModule.Dispose">
            <summary>
            Disposing TaskSchedulerOnUnobservedTaskException instance.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.VersionTelemetryInitializer">
            <summary>
            Telemetry initializer that adds the CLR version and Application Version.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.VersionTelemetryInitializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.VersionTelemetryInitializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.VersionTelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Populates device properties on a telemetry item.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.WindowsDesktop.WTSSessionTelemetryInitializer">
            <summary>
            Tracks the Remote Desktop and Remote Control state of the application
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.WTSSessionTelemetryInitializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.WindowsDesktop.WTSSessionTelemetryInitializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.WindowsDesktop.WTSSessionTelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <inheritdoc cref="M:Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)" />
        </member>
    </members>
</doc>
